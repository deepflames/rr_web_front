# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- main

#pool:
#  vmImage: ubuntu-latest
#pool: sh_pool

#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'




trigger:
  branches:
    include:
      - main

pr: none

variables:
  FlutterChannel: 'stable'
  FlutterVersion: 'latest'

jobs:
  - job: Test
    pool: sh_pool

    steps:
      - task: FlutterInstall@0
        displayName: Setup Flutter
        inputs:
          channel: '$(FlutterChannel)'
          version: '$(FlutterVersion)'

      - task: SonarQubePrepare@4
        displayName: Setup sonar
        inputs:
          SonarQube: 'SonarQube Service Connection'
          scannerMode: 'CLI'
          configMode: 'file'

      - task: CmdLine@2
        displayName: Run install
        inputs:
          script: 'flutter pub get'

      - task: CmdLine@2
        displayName: Run test
        inputs:
          script: 'flutter test --machine > tests.output'

      - task: CmdLine@2
        displayName: Run coverage
        inputs:
          script: 'flutter test --coverage'

      - task: SonarQubeAnalyze@4
        displayName: Run analyze

      - task: SonarQubePublish@4
        displayName: Run publish
        inputs:
          pollingTimeoutSec: '300'